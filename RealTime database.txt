Sample form and data base
import { initializeApp } from 'firebase/app'; // ✅ Correct import
import { getDatabase } from 'firebase/database'; // ✅ Correct import

const firebaseConfig = {
  apiKey: "AIzaSyAJ5yQ3NPUEjQGYKjUjO2-P14ZAv5o5zm0",
  authDomain: "formdetails-api.firebaseapp.com",
  databaseURL: "https://formdetails-api-default-rtdb.firebaseio.com",
  projectId: "formdetails-api",
  storageBucket: "formdetails-api.appspot.com",
  messagingSenderId: "642222904668",
  appId: "1:642222904668:web:99f3e5abf99835a185dd99"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig); // ✅ Now this will work
const database = getDatabase(app); // ✅ Correct database setup

export default database; // ✅ Export the database


import React, { useState,useEffect } from 'react';
import database from './firebase';
import {useNavigate} from 'react-router-dom';
import { ref, push,onValue,remove } from 'firebase/database';

const Home = () => {
    let navigate=useNavigate();
    const [data, setData] = useState({
        firstname: "",
        lastname: "",
        email: ""
    });
    const[getData,setGetData]=useState({});
    useEffect(()=>{
        const registerRef = ref(database, 'register');
        onValue(registerRef, (snapshot) => {
            const fetchData = snapshot.val();
             console.log(fetchData);
            setGetData(fetchData);
          });
    },[])

    const { firstname, lastname, email } = data;

    const changeHandler = (e) => {
        setData({ ...data, [e.target.name]: e.target.value });
    };

    const submitHandler = async(e) => {
        e.preventDefault();

        // Create a reference to "register" in the database
        const registerRef =  ref(database, 'register');

        // Push data to the database
         var added=await push(registerRef, data)
            .then(() => {
                alert("Data Saved Successfully");
            })
            .catch((err) => {
                console.error("Error:", err);
            });
            setData({
                firstname: "",
                lastname: "",
                email: ""
            })

    };
    const deleteHandler=async(key)=>{
        if(window.confirm("Are you sure you want to delete this record?")){
            const recordRef=ref(database,`register/${key}`);
            await remove(recordRef)
            .then(()=>{
                alert("Record Deleted Successfully");
            }).catch((err)=>{
                console.error("Error:",err);
            })
        
        }
    }
    return (
        <div className="container">
            <h1 style={{ textAlign: "center" }}>Register Form</h1><br />
            <form autoComplete="off" onSubmit={submitHandler}>
                <div className="row mb-3">
                    <label className="col-sm-2 col-form-label fw-bold">First Name:</label>
                    <div className="col-sm-4">
                        <input type="text" className="form-control" name="firstname" value={firstname}
                            onChange={changeHandler} placeholder="First Name" />
                    </div>
                </div>
                <div className="row mb-3">
                    <label className="col-sm-2 col-form-label fw-bold">Last Name:</label>
                    <div className="col-sm-4">
                        <input type="text" className="form-control" name="lastname" value={lastname}
                            onChange={changeHandler} placeholder="Last Name" />
                    </div>
                </div>
                <div className="row mb-3">
                    <label className="col-sm-2 col-form-label fw-bold">Email:</label>
                    <div className="col-sm-4">
                        <input type="text" className="form-control" name="email" value={email}
                            onChange={changeHandler} placeholder="Email" />
                    </div>
                </div>
                <div className="row">
                    <div className="offset-sm-2 col-sm-10">
                        <input type="submit" className="btn btn-success" value="Submit" />
                    </div>
                </div>
            </form>
            <div>
                {
                    getData && Object.keys(getData).map((key)=>
                        <div className="border mb-2">
                            <p>{getData[key].firstname}</p>
                            <p>{getData[key].lastname}</p>
                            <p>{getData[key].email}</p>

                            <button className="btn btn-success" onClick={()=>{
                                navigate(`/edit?firstname=${getData[key].firstname}&lastname=${getData[key].lastname}&email=${getData[key].email}&key=${key}`)
                            }}>Update</button> &nbsp;
                            
                            <button className="btn btn-danger" onClick={()=>deleteHandler(key)}>Delete</button>
                        </div>
                    )
                }
            </div>
        </div>
    );
};

export default Home;


import React,{useState,useEffect} from 'react'
import { useLocation } from 'react-router-dom'
import database from './firebase';
import { ref, update } from 'firebase/database';
import {useNavigate} from 'react-router-dom';
const Edit = () => {
    let navigate=useNavigate();
    let query =new URLSearchParams(useLocation().search);
        const [data, setData] = useState({
            firstname: "",
            lastname: "",
            email: ""
        });
    
        const { firstname, lastname, email } = data;
        const changeHandler = (e) => {
            setData({ ...data, [e.target.name]: e.target.value });
        };
        const key = query.get("key");
        useEffect(()=>{
            setData({ ...data,
                 firstname: query.get("firstname"),
                lastname: query.get("lastname"),
                email: query.get("email")
            });
        },[])
        const submitHandler=async(e)=>{
            e.preventDefault();
            const recordRef = ref(database, `register/${key}`);

        await update(recordRef, data)
            .then(() => {
                alert("Data Updated Successfully");
                setData({ firstname: "", lastname: "", email: "" }); // Reset form
                navigate("/"); // Redirect back to Home page
            })
            .catch((err) => {
                console.error("Error updating data:", err);
            });
        

        }
  return (
    <div>
         <div className="container">    
        <h1 style={{"textAlign":"center"}}>Edit Form</h1>
        <form autoComplete="off" onSubmit={submitHandler}>
            <div className="row mb-3">
                <label className="col-sm-2 col-form-label fw-bold">FIrst Name:</label>
                <div className="col-sm-4">
                    <input type="text"  value={firstname}className="form-control " name="firstname" onChange={changeHandler} placeholder="First Name"/> 
                </div>
            </div>
            <div className="row mb-3">
                <label className="col-sm-2 col-form-label fw-bold">Last Name:</label>
                <div className="col-sm-4">
                    <input type="text" value={lastname} className="form-control" name="lastname" onChange={changeHandler} placeholder="Last Name"/> 
                </div>
            </div>
            <div className="row mb-3">
                <label className="col-sm-2 col-form-label fw-bold">Email:</label>
                <div className="col-sm-4">
                    <input type="text"  value={email}className="form-control" name="email" onChange={changeHandler} placeholder="Email"/> 
                </div>
            </div>
            <div className="row mb-3">
                <div className="offset-sm-2 col-sm-10">
                    <input type="submit"  className="btn btn-success" value="Save"/> 
                </div>
            </div>
        </form>
    </div>
    </div>
  )
}

export default Edit